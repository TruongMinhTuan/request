// đ \u20AB
var GoogleSpreadsheet = require('google-spreadsheet');
var async = require('async');

// spreadsheet key is the long id in the sheets URL
var doc = new GoogleSpreadsheet('1SUfqrMGrN4qFTz3ibsBGgwKEl4E4YAdL5p1Ka6J7XQ0');
var sheet;
var numeral = require('numeral');
var array = [];
var arrayColumn = [];
var objWeek = {}
var objWeekDefine = {}
var ColumnCount = 0;
var S = require('string');

var arrayObjWeek = [];
var isNumber = require('is-number');
//min_col = 1 is a col week
var min_col = 2;
var max_col = 0;
var max_row = 200;

async.series([
  function setAuth(step) {
    var creds = require('./client_id.json');
    doc.useServiceAccountAuth(creds, step);
  },
  function getInfoAndWorksheets(step) {
    doc.getInfo(function (err, info) {
      console.log('Loaded doc: ' + info.title + ' by ' + info.author.email);
      sheet = info.worksheets[1];
      console.log('sheet 1: ' + sheet.title + ' ' + sheet.rowCount + 'x' + sheet.colCount);
      ColumnCount = sheet.rowCount;
      max_col =5// sheet.colCount;
      step();
    });
  },

  function getWeeks(step) {
    sheet.getCells({
      'min-col': min_col,
      'max-col': max_col,
      'max-row': max_row,
      'return-empty': true,
    }, function (err, cells) {
      for (var i = min_col; i <= max_col; i++)

        cells.forEach(element => {
          if (element.col == i) {

            // if (element.value.split("\u20AB").length > 1) {
            //   var a = ''
            //   element.value.split("\u20AB").forEach(element => {
            //     a += element
            //   });
            //   array.push(S(a).toFloat())
            // }
            // else {
            //   if (element.value.split("%").length > 1)
            //     array.push(Number(S(element.value).slugify()) / 100)
            //     else
            //       array.push(0)
            // }

            // array.push(element.numericValue)

            // array.push(element.numericValue)

            // if (element.value != '' && element.numericValue) {

            //   if ((element.value.split('-').length > 1)) {
            //     if ((element.value.split('-').length > 2))
            //       array.push(element.value)
            //     else
            //       if (element.value.split('%').length > 1)
            //         array.push(-Number(S(element.value).slugify() / 100))
            //       else
            //         array.push(-Number(S(element.value).slugify()))
            //   }
            //   else {
            //     if (element.value.split('%').length > 1)
            //       array.push(Number(S(element.value).slugify()) / 100)
            //     else {
            //       // đ 
            //       array.push(Number(S(element.value).slugify().s))
            //     }
            //   }
            // }

            if (element.value != '' && element.numericValue) {
              if (element.value.split('%').length > 1)
              array.push(Number(S(element.value).slugify()) / 100)
              else
                array.push(numeral(S(element.value).replaceAll('.', ' ').replaceAll(',', '.').s).value())
            }
            else
              array.push(0)
          }
        });

      step();
    });
  },
  function getArrayColum(step) {
    sheet.getCells({
      'min-col': 1,
      'max-col': 1,
      'min-row': 1,
      'max-row': max_row,
      'return-empty': true,
    }, function (err, cells) {
      cells.forEach(element => {
        //colum name
        if (element.value != '') {
          if (element.value == 1)
            arrayColumn.push('week')
          else
        // arrayColumn.push(S(element.value).stripPunctuation().stripLeft().replaceAll(' ', '_').s);
        
           arrayColumn.push(S(element.value).replaceAll('-', ' ').stripLeft().replaceAll(' ', '_').s)//strip("$", "%", "#", "(", ")", "/", ".", "-", "+", ">", "4", "13", "12", "11").trimLeft().replaceAll(' ', '-').s)
        }
        else
          arrayColumn.push(0)
      });
      // console.log(arrayColumn)
      step();
    });
  },
  function workingWithCells(step) {
    // get colum name ->metabase

    let i = 0;
    console.log(array.length)
    console.log(arrayColumn.length)
    arrayColumn.forEach(element => {
      if (element != 0)
        objWeekDefine[element] = Number
      i++
    });
    objWeekDefine.Week_End_On = Date
    // var temp = 0;
    // for (let t = min_col; t <= max_col; t++) {
    //   //  console.log('Array before push', arrayObjWeek);

    //   arrayColumn.forEach(element => {
    //     if (element != 0)
    //       objWeek[element] = array[temp]
    //     temp++
    //   });
       // objWeek.Week_End_On = '12'

    //   //console.log('Obj week', objWeek);
    //   var copy = Object.assign({}, objWeek);
    //   if (copy.week != 0)
    //     arrayObjWeek.push(copy)
    //   //console.log('Array right after push', arrayObjWeek);
    // }
    let te = 0;
    console.log('aa', array.length)
    for (let y = 0; y < array.length; y++) {
      if (te != arrayColumn.length - 1) {
        //console.log('a', arrayColumn[te], te)
        if (arrayColumn[te] != 0) {
          //console.log('b', arrayColumn[te])
          objWeek[arrayColumn[te]] = array[y]

        }
        te++
      } else {
        console.log('b', te)
        te = 0;
        var copy = Object.assign({}, objWeek);
        if (copy.week != 0)
          arrayObjWeek.push(copy)

      }


    }





    // orm.connect("mysql://root:12345@localhost/metaBaseTest", function (err, db) {
    //     if (err) throw err;
    //       var Week = db.define("Week14",objWeekDefine);
    //       Week.createAsync(objWeek)
    //       .then(function(results) {
    //       // console.log("done"+objWeek)
    //       });
    //      // add the table to the database

    //     });
    ////////////////////////////////////////////////////////////////////////////////////////////////
    var orm = require("orm");
    var countWeek = 20;
    orm.connect("mysql://root:12345@localhost/myTestData", function (err, db) {
      if (err) throw err;
      var Week = db.define("Weeks", objWeekDefine);
      db.drop(function (err) {
        if (err) throw err;
      });
    ///////////////////////////////////////////////////////////////



    //number week  need remove
    //remove at number week 
    //add week array week

    // for (let i = 1; i <=20 ; i++) {
    //   Week.find({ Week: arrayObjWeek[arrayObjWeek.length-i].week }).remove(function (err) {
    //    //  Does gone..
    //    });

    // }

      db.sync(function (err) {
        if (err) throw err;
        // add a row to the person table
        Week.create(arrayObjWeek, function (err) {
          if (err) throw err;
          //loop 50 week lasted
        });
      });
      //  db.close();
    });

    //   var orm = require('orm');

    //  orm.connectAsync('mysql://root:12345@localhost/myTestData')
    //    .then(function(db) {
    //        var Week = db.define("Weeks", objWeekDefine);
    //        Week.createAsync(arrayObjWeek)
    //              .then(function(results) {
    //              console.log("done")
    //              });
    //    })
    //    .catch(function(err) {
    //       console.error('Connection error: ' + err);
    //    });



    // }
    // var orm = require("orm");
    // orm.connect("mysql://root:12345@localhost/metaBaseTest", function (err, db) {
    //     if (err) throw err;
    //       var Week = db.define("Week14",objWeekDefine);
    //       Week.createAsync(arrayObjWeek)
    //       .then(function(results) {
    //       // console.log("done"+objWeek)
    //       });
    //      // add the table to the database

    //     });
    console.log(arrayObjWeek)
    step();
  }
], function (err) {
  if (err) {
    console.log('Error: ' + err);
  }
});
